services:
  db:
    image: postgres:13
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_USER=${POSTGRES_USER:-user}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-password}
      - POSTGRES_DB=${POSTGRES_DB:-docxconverter}
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-user} -d ${POSTGRES_DB:-docxconverter}"]
      interval: 5s
      timeout: 5s
      retries: 5

  rabbitmq:
    image: rabbitmq:3.9-management-alpine
    container_name: 'rabbitmq'
    environment:
      - RABBITMQ_DEFAULT_USER=${RABBITMQ_USER:-user}
      - RABBITMQ_DEFAULT_PASS=${RABBITMQ_PASS:-password}
    ports:
      - "5672:5672"
      - "15672:15672"

  api:
    build:
      context: .
      dockerfile: Dockerfile.api
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload
    volumes:
      - ./app:/code/app
      - shared_uploads:/code/uploads
      - shared_downloads:/code/downloads
    ports:
      - "8000:8000"
    environment:
      - PYTHONPATH=/code
      - DATABASE_URL=postgresql://${POSTGRES_USER:-user}:${POSTGRES_PASSWORD:-password}@db:5432/${POSTGRES_DB:-docxconverter}
      - CELERY_BROKER_URL=amqp://${RABBITMQ_USER:-user}:${RABBITMQ_PASS:-password}@rabbitmq:5672//
      - CELERY_RESULT_BACKEND=rpc://
    depends_on:
      db:
        condition: service_healthy
      rabbitmq:
        condition: service_started

  worker:
    build:
      context: .
      dockerfile: Dockerfile.worker
    command: /code/worker-entrypoint.sh
    volumes:
      - ./app:/code/app
      - ./worker-entrypoint.sh:/code/worker-entrypoint.sh
      - shared_uploads:/code/uploads
      - shared_downloads:/code/downloads
    environment:
      - PYTHONPATH=/code
      - DATABASE_URL=postgresql://${POSTGRES_USER:-user}:${POSTGRES_PASSWORD:-password}@db:5432/${POSTGRES_DB:-docxconverter}
      - CELERY_BROKER_URL=amqp://${RABBITMQ_USER:-user}:${RABBITMQ_PASS:-password}@rabbitmq:5672//
      - CELERY_RESULT_BACKEND=rpc://
    depends_on:
      - api

volumes:
  postgres_data:
  shared_uploads:
  shared_downloads: